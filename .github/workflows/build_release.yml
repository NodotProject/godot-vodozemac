name: Build Release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GODOT_VERSION: "4.1.3"
  SCONS_CACHE_LIMIT: 7168

jobs:
  build-linux:
    runs-on: ubuntu-latest
    name: Build Linux (x86_64)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential scons pkg-config libssl-dev clang

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup SCons cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.scons-cache/
            ~/.cargo/registry
            ~/.cargo/git
            vodozemac-ffi/target
            godot-cpp/bin
            godot-cpp/gen
          key: ${{ runner.os }}-scons-${{ hashFiles('**/*.cpp', '**/*.h', '**/Cargo.toml', 'godot-cpp/**') }}
          restore-keys: |
            ${{ runner.os }}-scons-

      - name: Build vodozemac-ffi
        run: |
          cd vodozemac-ffi
          cargo build --release --package vodozemac-cpp

      - name: Build godot-cpp
        run: |
          cd godot-cpp
          scons platform=linux target=template_release -j$(nproc)
        env:
          SCONS_CACHE: ${{ github.workspace }}/.scons-cache/

      - name: Build GDExtension
        run: |
          scons platform=linux target=template_release -j$(nproc)

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: libgodot-vodozemac-linux-x86_64
          path: addons/godot-vodozemac/bin/libgodot-vodozemac.so
          retention-days: 7

  build-windows:
    runs-on: windows-latest
    name: Build Windows (x86_64)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install SCons
        run: pip install scons

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v2

      - name: Setup SCons cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.scons-cache/
            ~/.cargo/registry
            ~/.cargo/git
            vodozemac-ffi/target
            godot-cpp/bin
            godot-cpp/gen
          key: ${{ runner.os }}-scons-${{ hashFiles('**/*.cpp', '**/*.h', '**/Cargo.toml', 'godot-cpp/**') }}
          restore-keys: |
            ${{ runner.os }}-scons-

      - name: Build vodozemac-ffi
        run: |
          cd vodozemac-ffi
          cargo build --release --package vodozemac-cpp

      - name: Build godot-cpp
        run: |
          cd godot-cpp
          scons platform=windows target=template_release
        env:
          SCONS_CACHE: ${{ github.workspace }}/.scons-cache/

      - name: Build GDExtension
        run: |
          scons platform=windows target=template_release

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: libgodot-vodozemac-windows-x86_64
          path: addons/godot-vodozemac/bin/libgodot-vodozemac.dll
          retention-days: 7

  build-macos:
    runs-on: macos-latest
    name: Build macOS (Universal)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          brew install scons

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin,aarch64-apple-darwin

      - name: Setup SCons cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.scons-cache/
            ~/.cargo/registry
            ~/.cargo/git
            vodozemac-ffi/target
            godot-cpp/bin
            godot-cpp/gen
          key: ${{ runner.os }}-scons-${{ hashFiles('**/*.cpp', '**/*.h', '**/Cargo.toml', 'godot-cpp/**') }}
          restore-keys: |
            ${{ runner.os }}-scons-

      - name: Build vodozemac-ffi (x86_64)
        run: |
          cd vodozemac-ffi
          cargo build --release --package vodozemac-cpp --target x86_64-apple-darwin

      - name: Build vodozemac-ffi (arm64)
        run: |
          cd vodozemac-ffi
          cargo build --release --package vodozemac-cpp --target aarch64-apple-darwin

      - name: Create universal binary for vodozemac-ffi
        run: |
          lipo -create \
            vodozemac-ffi/target/x86_64-apple-darwin/release/libvodozemac.a \
            vodozemac-ffi/target/aarch64-apple-darwin/release/libvodozemac.a \
            -output vodozemac-ffi/target/release/libvodozemac.a

      - name: Copy cxx-generated headers to common location
        run: |
          mkdir -p vodozemac-ffi/target/cxxbridge
          cp -r vodozemac-ffi/target/x86_64-apple-darwin/cxxbridge/* vodozemac-ffi/target/cxxbridge/

      - name: Build godot-cpp (x86_64)
        run: |
          cd godot-cpp
          scons platform=macos target=template_release arch=x86_64
        env:
          SCONS_CACHE: ${{ github.workspace }}/.scons-cache/

      - name: Build godot-cpp (arm64)
        run: |
          cd godot-cpp
          scons platform=macos target=template_release arch=arm64
        env:
          SCONS_CACHE: ${{ github.workspace }}/.scons-cache/

      - name: Build GDExtension (x86_64)
        run: |
          scons platform=macos target=template_release arch=x86_64

      - name: Build GDExtension (arm64)
        run: |
          scons platform=macos target=template_release arch=arm64

      - name: Create universal binary
        run: |
          lipo -create \
            addons/godot-vodozemac/bin/libgodot-vodozemac.x86_64.dylib \
            addons/godot-vodozemac/bin/libgodot-vodozemac.arm64.dylib \
            -output addons/godot-vodozemac/bin/libgodot-vodozemac.dylib

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: libgodot-vodozemac-macos-universal
          path: addons/godot-vodozemac/bin/libgodot-vodozemac.dylib
          retention-days: 7

  create-addon-package:
    runs-on: ubuntu-latest
    name: Create addon package
    needs: [build-linux, build-windows, build-macos]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create addons directory
        run: mkdir -p package/addons/godot-vodozemac/bin

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: libgodot-vodozemac-linux-x86_64
          path: package/addons/godot-vodozemac/bin/

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: libgodot-vodozemac-windows-x86_64
          path: package/addons/godot-vodozemac/bin/

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: libgodot-vodozemac-macos-universal
          path: package/addons/godot-vodozemac/bin/

      - name: Copy gdextension file
        run: |
          cp addons/godot-vodozemac/godot-vodozemac.gdextension package/addons/godot-vodozemac/

      - name: Copy README and LICENSE
        run: |
          cp README.md package/addons/godot-vodozemac/
          cp LICENSE package/addons/godot-vodozemac/ || echo "LICENSE file not found"

      - name: Generate SHA256 checksums
        run: |
          cd package/addons/godot-vodozemac/bin
          sha256sum * > checksums.txt
          cat checksums.txt

      - name: Create addon archive
        run: |
          cd package
          zip -r ../godot-vodozemac-addon.zip addons/

      - name: Upload addon package
        uses: actions/upload-artifact@v4
        with:
          name: godot-vodozemac-addon
          path: godot-vodozemac-addon.zip
          retention-days: 30

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [create-addon-package]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download addon package
        uses: actions/download-artifact@v4
        with:
          name: godot-vodozemac-addon
          path: .

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          files: godot-vodozemac-addon.zip
          name: godot-vodozemac-${{ github.ref_name }}
